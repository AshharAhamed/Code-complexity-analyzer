CREATE TYPE Course_t AS OBJECT (
	cid CHAR(10),
	cname VARCHAR(50),
	credits INT
)

CREATE TYPE Grade_t AS OBJECT(
	course REF Course_t,
	grade CHAR(2),
	semester INT,
	year	 INT
)

CREATE TYPE Grades_nt AS TABLE OF Grade_t


CREATE TYPE Student_t AS OBJECT(
	sid char(10),
	sname VARCHAR(50),
	gpa	  FLOAT,
	grades Grades_nt	
)

CREATE TABLE Courses OF Course_t(
	cid PRIMARY KEY
)

CREATE TABLE Students OF Student_t(
	sid PRIMARY KEY
)NESTED TABLE grades STORE AS grade_table


INSERT INTO Courses VALUES (Course_t('DBMS II', 'Database', '3'))
INSERT INTO Courses VALUES (Course_t('SE I', 'Software Engineering', '4'))


INSERT INTO Students VALUES (Student_t('S001', 'Sampath Wijesinghe', '3.4', Grades_nt(Grade_t((SELECT REF(c) FROM Courses c Where c.cid = 'DBMS II'), null, 2, 2006), Grade_t((SELECT REF(c) FROM Courses c WHERE c.cid = 'SE I'), 'B+', 1, 2005))))

UPDATE TABLE (SELECT s.grades 
			  FROM Students s 
			  WHERE s.sid = 'S001') g
SET g.grade = 'A'
WHERE g.course.cid = 'DBMS II'
			  
			  
			  SELECT *
			  FROM TABLE (SELECT s.grades
						  FROM Students s
						  WHERE s.sid= 'S001') g
						  
SELECT s.sname
FROM Students s, TABLE (s.grades) g	
WHERE s.sid = 'S001' AND g.course.cid = 'DBMS II' and g.grade = 'A'	

ALTER TYPE Course_t NOT FINAL CASCADE

CREATE TYPE Elective_t UNDER Course_t(
	consideredForGPA CHAR(5)
)

ALTER TYPE Student_t
ADD MEMBER FUNCTION NumAGrades RETURN INTEGER 
CASCADE;

CREATE OR REPLACE TYPE BODY Student_t AS

MEMBER FUNCTION NumAGrades RETURN INTEGER
IS
	gcount_ INTEGER;
BEGIN
	SELECT COUNT(*) INTO gcount_
	FROM TABLE (SELF.grades) g
	WHERE g.grade = 'A';
	RETURN gcount_;
END NumAGrades;

END;


SELECT COUNT(*)
	FROM Students s, TABLE(s.grades) g
	WHERE s.sid = 'S001'
	
SELECT s.sname, s.NumAGrades()
FROM Students s	

UPDATE Courses s
SET 

SELECT AVG(s.gpa)
FROM Students s , TABLE(s.grades) g
WHERE g.course.cid IN (SELECT c.cid
FROM Courses c
WHERE VALUE(c) IS OF (ONLY Elective_t))

		  
		  
		  